<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAdd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>